.head_list, ul{
    display: flex;
    justify-content: space-around;
}
.head_list li{
    border: none;
    color:black;
}

.head_list{
    margin-bottom: 30px;
    font-size: 20px;

}

div{
    margin: 25px 0;
}

.wrap{
    display: flex;
    justify-content: space-around;
}

label{
    margin-right: 20px;
}

.ok{
    
    color: green;
}

.error{
    color: red;
}

ul{
    list-style: none;
}

li{
    width: 13%;
    border: solid black 1px;
    margin-top: 1px;
    text-align: center;
    border-right: none;
}
.delete{
    width: 100%;
}



/* Разработка приложения “Книги”.
1. Объявить класс под названием “Book”.
2. Класс “Book”. У каждой новой книги есть “название”, “автор”,”Издательство” “год
издательства”, “количество экземпляров”, “id”, “количество страниц”.Нужно заметить что у
любой книги спустя каждые 25 страниц начинается новая глава. Создать метод который будет
выводить информацию о количестве глав в книги. Должен быть метод удаления книги из
списка.
3. Класс “TravelBook”. У каждой новой книги есть: “название”, “Издательство”, “количество
экземпляров”, “количество страниц”. Каждые 5 страниц начинается новая глава. Должен быть
метод который выводит количество глав в книге. Должен быть метод удаления книги из
списка.
4. Внешний интерфейс должен быть следующим:
Слева все поля ввода которые отвечают за добавление новой книги от класса Book;
Справа все поля ввода отвечающие за добавление новой книги от класса TravelBook;
Не важно какой тип книги мы добавляем, все они должны добавляться в один и тот же список
книг.
На кнопку удалить (повесить функционал удаления книги).
Использовать прототипное наследование. */